{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\vad\\\\example1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\vad\\\\example1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\vad\\\\example1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\vad\\\\example1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\vad\\\\example1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\vad\\\\example1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\vad\\\\example1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\vad\\\\example1\\\\src\\\\App.js\";\nimport React from 'react';\nimport Chatkit from '@pusher/chatkit';\nimport MessageList from './components/MessageList';\nimport SendMessageForm from './components/SendMessageForm';\nimport RoomList from './components/RoomList';\nimport NewRoomForm from './components/NewRoomForm';\nimport { tokenUrl, instanceLocator } from './conf';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      roomId: null,\n      messages: [],\n      joinableRooms: [],\n      joinedRooms: []\n    };\n    _this.sendMessage = _this.sendMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.subscribeToRoom = _this.subscribeToRoom.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getRooms = _this.getRooms.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createRoom = _this.createRoom.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var chatManager = new Chatkit.ChatManager({\n        instanceLocator: instanceLocator,\n        userId: 'perborgen',\n        tokenProvider: new Chatkit.TokenProvider({\n          url: tokenUrl\n        })\n      });\n      chatManager.connect().then(function (currentUser) {\n        _this2.currentUser = currentUser;\n\n        _this2.getRooms();\n      }).catch(function (err) {\n        return console.log('error on connecting: ', err);\n      });\n    }\n  }, {\n    key: \"getRooms\",\n    value: function getRooms() {\n      var _this3 = this;\n\n      this.currentUser.getJoinableRooms().then(function (joinableRooms) {\n        _this3.setState({\n          joinableRooms: joinableRooms,\n          joinedRooms: _this3.currentUser.rooms\n        });\n      }).catch(function (err) {\n        return console.log('error on joinableRooms: ', err);\n      });\n    }\n  }, {\n    key: \"subscribeToRoom\",\n    value: function subscribeToRoom(roomId) {\n      var _this4 = this;\n\n      this.setState({\n        messages: []\n      });\n      this.currentUser.subscribeToRoom({\n        roomId: roomId,\n        hooks: {\n          onNewMessage: function onNewMessage(message) {\n            _this4.setState({\n              messages: _toConsumableArray(_this4.state.messages).concat([message])\n            });\n          }\n        }\n      }).then(function (room) {\n        _this4.setState({\n          roomId: room.id\n        });\n\n        _this4.getRooms();\n      }).catch(function (err) {\n        return console.log('error on subscribing to room: ', err);\n      });\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(text) {\n      this.currentUser.sendMessage({\n        text: text,\n        roomId: this.state.roomId\n      });\n    }\n  }, {\n    key: \"createRoom\",\n    value: function createRoom(name) {\n      var _this5 = this;\n\n      this.currentUser.createRoom({\n        name: name\n      }).then(function (room) {\n        _this5.subscribeToRoom(room.id);\n      }).catch(function (err) {\n        return console.log('error with createRoom: ', err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(RoomList, {\n        subscribeToRoom: this.subscribeToRoom,\n        rooms: _toConsumableArray(this.state.joinableRooms).concat(_toConsumableArray(this.state.joinedRooms)),\n        roomId: this.state.roomId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(MessageList, {\n        roomId: this.state.roomId,\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(SendMessageForm, {\n        disabled: !this.state.roomId,\n        sendMessage: this.sendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(NewRoomForm, {\n        createRoom: this.createRoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\vad\\example1\\src\\App.js"],"names":["React","Chatkit","MessageList","SendMessageForm","RoomList","NewRoomForm","tokenUrl","instanceLocator","App","state","roomId","messages","joinableRooms","joinedRooms","sendMessage","bind","subscribeToRoom","getRooms","createRoom","chatManager","ChatManager","userId","tokenProvider","TokenProvider","url","connect","then","currentUser","catch","err","console","log","getJoinableRooms","setState","rooms","hooks","onNewMessage","message","room","id","text","name","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Chatkit from '@pusher/chatkit'\r\nimport MessageList from './components/MessageList'\r\nimport SendMessageForm from './components/SendMessageForm'\r\nimport RoomList from './components/RoomList'\r\nimport NewRoomForm from './components/NewRoomForm'\r\n\r\nimport { tokenUrl, instanceLocator } from './conf'\r\n\r\nclass App extends React.Component {\r\n    \r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            roomId: null,\r\n            messages: [],\r\n            joinableRooms: [],\r\n            joinedRooms: []\r\n        }\r\n        this.sendMessage = this.sendMessage.bind(this)\r\n        this.subscribeToRoom = this.subscribeToRoom.bind(this)\r\n        this.getRooms = this.getRooms.bind(this)\r\n        this.createRoom = this.createRoom.bind(this)\r\n    } \r\n    \r\n    componentDidMount() {\r\n        const chatManager = new Chatkit.ChatManager({\r\n            instanceLocator,\r\n            userId: 'perborgen',\r\n            tokenProvider: new Chatkit.TokenProvider({\r\n                url: tokenUrl\r\n            })\r\n        })\r\n        \r\n        chatManager.connect()\r\n        .then(currentUser => {\r\n            this.currentUser = currentUser\r\n            this.getRooms()\r\n        })\r\n        .catch(err => console.log('error on connecting: ', err))\r\n    }\r\n    \r\n    getRooms() {\r\n        this.currentUser.getJoinableRooms()\r\n        .then(joinableRooms => {\r\n            this.setState({\r\n                joinableRooms,\r\n                joinedRooms: this.currentUser.rooms\r\n            })\r\n        })\r\n        .catch(err => console.log('error on joinableRooms: ', err))\r\n    }\r\n    \r\n    subscribeToRoom(roomId) {\r\n        this.setState({ messages: [] })\r\n        this.currentUser.subscribeToRoom({\r\n            roomId: roomId,\r\n            hooks: {\r\n                onNewMessage: message => {\r\n                    this.setState({\r\n                        messages: [...this.state.messages, message]\r\n                    })\r\n                }\r\n                \r\n            }\r\n        })\r\n        .then(room => {\r\n            this.setState({\r\n                roomId: room.id\r\n            })\r\n            this.getRooms()\r\n        })\r\n        .catch(err => console.log('error on subscribing to room: ', err))\r\n    }\r\n    \r\n    sendMessage(text) {\r\n        this.currentUser.sendMessage({\r\n            text,\r\n            roomId: this.state.roomId\r\n        })\r\n    }\r\n    \r\n    createRoom(name) {\r\n        this.currentUser.createRoom({\r\n            name\r\n        })\r\n        .then(room => {\r\n            this.subscribeToRoom(room.id)\r\n        })\r\n        .catch(err => console.log('error with createRoom: ', err))\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <RoomList\r\n                    subscribeToRoom={this.subscribeToRoom}\r\n                    rooms={[...this.state.joinableRooms, ...this.state.joinedRooms]}\r\n                    roomId={this.state.roomId} />\r\n                <MessageList \r\n                    roomId={this.state.roomId}\r\n                    messages={this.state.messages} />\r\n                <SendMessageForm\r\n                    disabled={!this.state.roomId}\r\n                    sendMessage={this.sendMessage} />\r\n                <NewRoomForm createRoom={this.createRoom} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}