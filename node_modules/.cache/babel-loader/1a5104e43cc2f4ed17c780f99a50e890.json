{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\vad\\\\example1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\vad\\\\example1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\vad\\\\example1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\vad\\\\example1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\vad\\\\example1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\vad\\\\example1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\vad\\\\example1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\vad\\\\example1\\\\src\\\\index.js\";\n\n/** Replace these with your own API keys, username and roomId from Chatkit  */\nvar testToken = \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/dfaf1e22-2d33-45c9-b4f8-31f634621d24/token\";\nvar instanceLocator = \"v1:us1:dfaf1e22-2d33-45c9-b4f8-31f634621d24\";\nvar roomId = 9806194;\nvar username = 'perborgen';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      messages: []\n    };\n    _this.sendMessage = _this.sendMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var chatManager = new Chatkit.ChatManager({\n        instanceLocator: instanceLocator,\n        userId: 'janedoe',\n        tokenProvider: new Chatkit.TokenProvider({\n          url: testToken\n        })\n      });\n      chatManager.connect().then(function (currentUser) {\n        _this2.currentUser = currentUser;\n\n        _this2.currentUser.subscribeToRoom({\n          roomId: roomId,\n          hooks: {\n            onNewMessage: function onNewMessage(message) {\n              _this2.setState({\n                messages: _toConsumableArray(_this2.state.messages).concat([message])\n              });\n            }\n          }\n        });\n      });\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(text) {\n      this.currentUser.sendMessage({\n        text: text,\n        roomId: roomId\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(MessageList, {\n        roomId: this.state.roomId,\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(SendMessageForm, {\n        sendMessage: this.sendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar MessageList =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(MessageList, _React$Component2);\n\n  function MessageList() {\n    _classCallCheck(this, MessageList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MessageList).apply(this, arguments));\n  }\n\n  _createClass(MessageList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"ul\", {\n        className: \"message-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.props.messages.map(function (message, index) {\n        return React.createElement(\"li\", {\n          key: message.id,\n          className: \"message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, message.senderId), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, message.text));\n      }));\n    }\n  }]);\n\n  return MessageList;\n}(React.Component);\n\nvar SendMessageForm =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(SendMessageForm, _React$Component3);\n\n  function SendMessageForm() {\n    var _this3;\n\n    _classCallCheck(this, SendMessageForm);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(SendMessageForm).call(this));\n    _this3.state = {\n      message: ''\n    };\n    _this3.handleChange = _this3.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    _this3.handleSubmit = _this3.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    return _this3;\n  }\n\n  _createClass(SendMessageForm, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState({\n        message: e.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      this.props.sendMessage(this.state.message);\n      this.setState({\n        message: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"send-message-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.handleChange,\n        value: this.state.message,\n        placeholder: \"Type your message and hit ENTER\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SendMessageForm;\n}(React.Component);\n\nfunction Title() {\n  return React.createElement(\"p\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"My awesome chat app\");\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:\\Users\\vad\\example1\\src\\index.js"],"names":["testToken","instanceLocator","roomId","username","App","state","messages","sendMessage","bind","chatManager","Chatkit","ChatManager","userId","tokenProvider","TokenProvider","url","connect","then","currentUser","subscribeToRoom","hooks","onNewMessage","message","setState","text","React","Component","MessageList","props","map","index","id","senderId","SendMessageForm","handleChange","handleSubmit","e","target","value","preventDefault","Title","ReactDOM","render","document","getElementById"],"mappings":"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","sourcesContent":["/** Replace these with your own API keys, username and roomId from Chatkit  */\r\nconst testToken = \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/dfaf1e22-2d33-45c9-b4f8-31f634621d24/token\"\r\nconst instanceLocator = \"v1:us1:dfaf1e22-2d33-45c9-b4f8-31f634621d24\"\r\nconst roomId = 9806194\r\nconst username = 'perborgen'\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            messages: []\r\n        }\r\n        this.sendMessage = this.sendMessage.bind(this)\r\n    } \r\n    \r\n    componentDidMount() {\r\n        const chatManager = new Chatkit.ChatManager({\r\n            instanceLocator: instanceLocator,\r\n            userId: 'janedoe',\r\n            tokenProvider: new Chatkit.TokenProvider({\r\n                url: testToken\r\n            })\r\n        })\r\n        \r\n        chatManager.connect()\r\n        .then(currentUser => {\r\n            this.currentUser = currentUser\r\n            this.currentUser.subscribeToRoom({\r\n            roomId: roomId,\r\n            hooks: {\r\n                onNewMessage: message => {\r\n\r\n                    this.setState({\r\n                        messages: [...this.state.messages, message]\r\n                    })\r\n                }\r\n            }\r\n        })\r\n      })\r\n    }\r\n    \r\n    sendMessage(text) {\r\n        this.currentUser.sendMessage({\r\n            text,\r\n            roomId: roomId\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n              <Title />\r\n              <MessageList \r\n                  roomId={this.state.roomId}\r\n                  messages={this.state.messages} />\r\n              <SendMessageForm\r\n                  sendMessage={this.sendMessage} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass MessageList extends React.Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"message-list\">\r\n                {this.props.messages.map((message, index) => {\r\n                    return (\r\n                      <li  key={message.id} className=\"message\">\r\n                        <div>{message.senderId}</div>\r\n                        <div>{message.text}</div>\r\n                      </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nclass SendMessageForm extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            message: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    \r\n    handleChange(e) {\r\n        this.setState({\r\n            message: e.target.value\r\n        })\r\n    }\r\n    \r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n        this.props.sendMessage(this.state.message)\r\n        this.setState({\r\n            message: ''\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <form\r\n                onSubmit={this.handleSubmit}\r\n                className=\"send-message-form\">\r\n                <input\r\n                    onChange={this.handleChange}\r\n                    value={this.state.message}\r\n                    placeholder=\"Type your message and hit ENTER\"\r\n                    type=\"text\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Title() {\r\n  return <p className=\"title\">My awesome chat app</p>\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}